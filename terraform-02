vim main.tf 

provider "aws" {
region = "ap-south-1"
}

resource "aws_instance" "one" {
count = var.instance_count
ami = "ami-0f8ca728008ff5af4"
instance_type = var.instance_type
tags = {
Name = "web-server"
}
}


variable.tf 

variable "instance_type" {
description = "im uisng for my instance variable"
type = string
default = "t2.medium"
}
==============================================================================================================================

main.tf

provider "aws" {
region = "us-east-1"
}

resource "aws_instance" "one" {
ami = var.ami_id
instance_type = var.instance_type
tags = {
Name = var.instance_name
}
}

variable.tf

variable "ami_id" {

}

variable "instance_type" {

}

variable "instance_name" {

}

swiggy.tfvars

ami_id = "ami-0557a15b87f6559cf"

instance_type = "t2.micro"

instance_name = "swiggy-dev"

zomato.tfvars

ami_id = "ami-0c9978668f8d55984"

instance_type = "t2.medium"

instance_name = "zomato-dev"


=============================================================================================

provider "aws" {
region = "us-east-1"
}

resource "aws_instance" "one" {
ami = "ami-016eb5d644c333ccb"
instance_type = "t2.micro"
tags = {
Name = "raham"
}
}

output "raham" {
value = [aws_instance.one.public_ip, aws_instance.one.private_ip, aws_instance.one.public_dns]
}

=======================================================================================================================


  1  aws configurw
    2  aws configure
    3  ls -al
    4  cd .aws/
    5  ll
    6  vim config
    7  pwd
    8  cd
    9  mkdir terraform
   10  cd terraform/
   11  sudo yum install -y yum-utils shadow-utils
   12  sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
   13  sudo yum -y install terraform
   14  terraform -v
   15  vim main.tf
   16  vim variable.tf
   17  terraform init
   18  terraform plan
   19  terraform apply --auto-approve
   20  terraform destroy --auto-approve
   21  ll
   22  vim main.tf
   23  vim variable.tf
   24  cat main.tf
   25  cat variable.tf
   26  terraform apply --auto-approve
   27  terraform destroy --auto-approve
   28  vim variable.tf
   29  cat main.tf
   30  cat variable.tf
   31  vim raham.tfvars
   32  cat main.tf
   33  cat variable.tf
   34  cat raham.tfvars
   35  terraform apply --auto-approve
   36  terraform destroy --auto-approve
   37  vim raham.tfvars
   38  cat main.tf
   39  cat variable.tf
   40  cat raham.tfvars
   41  vim raham.tfvars
   42  terraform apply --auto-approve
   43  vim main.tf
   44  vim variable.tf
   45  vim raham.tfvars
   46  terraform apply --auto-approve
   47  terraform apply --auto-approve -lock=false
   48  ps
   49  kill -9 943 3842
   50  mv raham.tfvars terraform.tfvars
   51  ll
   52  terraform apply --auto-approve
   53  terraform destroy --auto-approve
   54  vim main.tf
   55  vim variable.tf
   56  cat main.tf  variable.tf
   57  vim swiggy.tfvars
   58  cp swiggy.tfvars zomato.tfvars
   59  vim zomato.tfvars
   60  ls
   61  cat main.tf
   62  cat variable.tf
   63  cat swiggy.tfvars
   64  cat zomato.tfvars
   65  terraform apply --auto-approve -var-file="zomato.tfvars"
   66  vim variable.tf
   67  terraform apply --auto-approve -var-file="zomato.tfvars"
   68  vim zomato.tfvars
   69  terraform apply --auto-approve -var-file="zomato.tfvars"
   70  terraform apply --auto-approve -var-file="swiggy.tfvars"
   71  terraform destroy --auto-approve -var-file="swiggy.tfvars"
   72  ll
   73  rm -rf *.tfvars variable.tf
   74  vim main.tf
   75  cat main.tf
   76  terraform apply --auto-approve -var="instance_type=t2.micro"
   77  terraform apply --auto-approve -var="instance_type=t2.medium"
   78  terraform destroy --auto-approve
   79  vim main.tf
   80  terraform apply --auto-approve -var="ami=ami-016eb5d644c333ccb"
   81  terraform destroy --auto-approve
   82  vim main.tf
   83  terraform apply --auto-approve
   84  vim main.tf
   85  terraform apply --auto-approve
   86  vim main.tf
   87  terraform apply --auto-approve
   88  cat main.tf
